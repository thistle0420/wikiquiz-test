{"version":3,"sources":["Components/Header.js","Components/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["Header","this","props","data","name","description","id","type","bg","className","bottom","duration","href","Component","wikiList","wiki","Resume","color","i","Math","floor","random","getWikiTime","num","datetime","getWikiUrl","url","getWikiText","text","items","length","push","left","allQuestion","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qrzCAoCeA,E,4JA/Bb,WACE,IAAKC,KAAKC,MAAMC,KAAM,OAAO,KAE7B,IAAMC,EAAOH,KAAKC,MAAMC,KAAKC,KACvBC,EAAcJ,KAAKC,MAAMC,KAAKE,YAEpC,OACE,yBAAQC,GAAG,OAAX,UACE,cAAC,IAAD,CAAaC,KAAK,SAASC,IAAI,IAE/B,qBAAKC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAMC,QAAM,EAAZ,SACE,oBAAID,UAAU,sBAAd,SAAqCL,MAEvC,cAAC,IAAD,CAAMM,QAAM,EAACC,SAAU,KAAvB,SACE,+BAAKN,EAAL,cAKN,mBAAGI,UAAU,aAAb,SACE,mBAAGA,UAAU,eAAeG,KAAK,UAAjC,SACE,mBAAGH,UAAU,gC,GAxBJI,aCAfC,E,MAAgBX,KAAKY,KAuEZC,E,oKApEb,WAGE,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHY,mBAGKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,I,oBAGT,WACE,IAAKhB,KAAKC,MAAMC,KAAM,OAAO,KAE7B,IAAMmB,EAAc,SAACC,GACnB,OAAOT,EAASS,GAAKC,UAGjBC,EAAa,SAACF,GAClB,OAAOT,EAASS,GAAKG,KAGjBC,EAAc,SAACJ,GACnB,OAAOT,EAASS,GAAKK,MAuCvB,OACE,yBAAStB,GAAG,SAAZ,SATkB,WAElB,IADA,IA7BgBiB,EA6BVM,EAAQ,GACLX,EAAE,EAAGA,GAAGJ,EAASgB,OAAQZ,IAChCW,EAAME,MA/BQR,EA+BML,EA7BpB,cAAC,IAAD,CAAOc,MAAI,EAACrB,SAAU,KAAtB,SACE,sBAAKF,UAAU,WAAf,UACE,sBAAKA,UAAU,2BAAf,UACA,6BACI,6CAAgBc,OAElB,6BACE,qCAAQD,EAAYC,EAAI,GAAxB,YAIJ,qBAAKd,UAAU,wBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,4BAAIkB,EAAYJ,EAAI,KACpB,mBAAGX,KAAMa,EAAWF,EAAI,GAAxB,uEAgBZ,OAAO,8BAAOM,IAKXI,S,GA/DYpB,aC0CNqB,E,kDAxCb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDiC,MAAQ,CACXC,IAAK,MACLC,WAAY,IAGdC,IAAQC,WAAW,kBACnBD,IAAQE,SAASC,OAAOC,SAASC,UARhB,E,iDAWnB,WACEC,IAAEC,KAAK,CACLnB,IAAK,oBACLoB,SAAU,OACVC,OAAO,EACPC,QAAS,SAAS7C,GAChBF,KAAKgD,SAAS,CAAEZ,WAAYlC,KAC5B+C,KAAKjD,MACPkD,MAAO,SAASC,EAAKC,EAAQC,GAC3BC,QAAQC,IAAIF,GACZG,MAAMH,Q,+BAKZ,WACErD,KAAKyD,kB,oBAGP,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQN,KAAMF,KAAKkC,MAAME,WAAWsB,OACpC,cAAC,EAAD,CAAQxD,KAAMF,KAAKkC,MAAME,WAAWuB,gB,GAnC1B/C,aCKHgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20ab85a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ParticlesBg from \"particles-bg\";\nimport Fade from \"react-reveal\";\n\nclass Header extends Component {\n  render() {\n    if (!this.props.data) return null;\n\n    const name = this.props.data.name;\n    const description = this.props.data.description;\n\n    return (\n      <header id=\"home\">\n        <ParticlesBg type=\"circle\" bg={true} />\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <Fade bottom>\n              <h1 className=\"responsive-headline\">{name}</h1>\n            </Fade>\n            <Fade bottom duration={1200}>\n              <h3>{description}.</h3>\n            </Fade>\n          </div>\n        </div>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#resume\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Slide from \"react-reveal\";\nimport Data from '../python/data.json';\n\nconst wikiList = Data.data.wiki;\n\nclass Resume extends Component {\n  getRandomColor() {\n    let letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  render() {\n    if (!this.props.data) return null;\n\n    const getWikiTime = (num) => {\n      return wikiList[num].datetime\n    }\n\n    const getWikiUrl = (num) => {\n      return wikiList[num].url\n    }\n\n    const getWikiText = (num) => {\n      return wikiList[num].text\n    }\n\n    const question = (num) => {\n      return (\n        <Slide left duration={1300}>\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n            <h1>\n                <span>Question {num}</span>\n              </h1>\n              <h1>\n                <span>({getWikiTime(num-1)})</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">\n                  <p>{getWikiText(num-1)}</p>\n                  <a href={getWikiUrl(num-1)}>\n                    → 答えはこちら\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Slide>\n      )\n    }\n\n    const allQuestion = () => {\n      const items = [];\n      for (let i=1; i<=wikiList.length; i++) {\n        items.push(question(i))\n      }\n      return <div>{ items }</div>;\n    }\n\n    return (\n      <section id=\"resume\">\n        {allQuestion()}\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Resume from \"./Components/Resume\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: \"bar\",\n      resumeData: {}\n    };\n\n    ReactGA.initialize(\"UA-110570651-1\");\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"./resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function(data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function(xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}